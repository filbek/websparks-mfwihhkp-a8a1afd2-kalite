# .gitignore Dosyası Güncelleme Talimatları

## Mevcut Durum

Mevcut .gitignore dosyası çok basit ve sadece 2 satır içeriyor:
```
node_modules
*.env
```

Bu dosya GitHub'a repo edilmemesi gereken çok önemli dosyaları engellememektedir.

## Güncellenmiş .gitignore Dosyası İçeriği

Aşağıdaki içeriği mevcut .gitignore dosyasına kopyalayın:

```gitignore
# =================================
# DEPENDENCIES (BAĞIMLILIKLAR)
# =================================
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# =================================
# ENVIRONMENT VARIABLES (ORTAM DEĞİŞKENLERİ)
# =================================
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
.env.*.local

# =================================
# BUILD OUTPUTS (İNŞA ÇIKTILARI)
# =================================
dist/
build/
.next/
out/
.output/
.vercel/
.cache/
.turbo/

# =================================
# TYPESCRIPT BUILD ARTIFACTS
# =================================
*.tsbuildinfo
next-env.d.ts

# =================================
# IDE AND EDITOR FILES (IDE VE DÜZENLEYİCİ DOSYALARI)
# =================================
.vscode/
!.vscode/extensions.json
!.vscode/settings.json
.idea/
*.swp
*.swo
*~

# JetBrains IDEs
.idea/
*.iws
*.iml
*.ipr

# Visual Studio Code
.vscode/
!.vscode/extensions.json
!.vscode/settings.json

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Sublime Text
*.sublime-project
*.sublime-workspace

# =================================
# OS GENERATED FILES (İŞLETİM SİSTEMİ OLUŞTURULAN DOSYALAR)
# =================================
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# =================================
# LOGS (LOG DOSYALARI)
# =================================
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# =================================
# RUNTIME DATA (ÇALIŞMA ZAMANI VERİLERİ)
# =================================
pids/
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov
.nyc_output/

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
public

# Storybook build outputs
.out
.storybook-out

# Temporary folders
tmp/
temp/

# =================================
# DATABASE FILES (VERİTABANI DOSYALARI)
# =================================
*.db
*.sqlite
*.sqlite3
*.db-journal
*.sqlite-shm
*.sqlite-wal

# =================================
# SUPABASE SPECIFIC (SUPABASE ÖZEL DOSYALAR)
# =================================
.supabase/
supabase/.temp/

# =================================
# TESTING (TEST DOSYALARI)
# =================================
coverage/
.nyc_output/
junit.xml
test-results/
*.lcov

# =================================
# DOCKER (DOCKER DOSYALARI)
# =================================
Dockerfile
docker-compose.yml
docker-compose.override.yml
.dockerignore

# =================================
# BACKUP FILES (YEDEK DOSYALARI)
# =================================
*.bak
*.backup
*.old
*.orig
*.rej

# =================================
# CONFIGURATION FILES (YAPILANDIRMA DOSYALARI)
# =================================
# Keep these files if they don't contain sensitive data
# config/local.json
# config/production.json
# config/staging.json

# =================================
# DOCUMENTATION BUILD (DOKÜMANTASYON İNŞASI)
# =================================
docs/_build/
docs/.doctrees/
site/

# =================================
# PACKAGE MANAGER LOCK FILES (PAKET YÖNETİCİ KİLİT DOSYALARI)
# =================================
# Keep these files in version control for reproducible builds
# package-lock.json
# yarn.lock
# pnpm-lock.yaml

# =================================
# ASSETS (VARLIKLAR)
# =================================
# User uploaded assets
uploads/
static/uploads/
public/uploads/

# =================================
# CERTIFICATES (SERTİFİKALAR)
# =================================
*.pem
*.key
*.crt
*.cer
*.pfx
*.p12

# =================================
# ARCHIVES (ARŞİVLER)
# =================================
*.zip
*.tar.gz
*.rar
*.7z

# =================================
# LARGE FILES (BÜYÜK DOSYALAR)
# =================================
# Files larger than 100MB
*.mp4
*.avi
*.mov
*.wmv
*.flv
*.webm
*.mkv

# =================================
# DEVELOPMENT TOOLS (GELİŞTİRME ARAÇLARI)
# =================================
# ESLint
.eslintcache

# Prettier
.prettierignore
.prettiercache

# Stylelint
.stylelintcache

# =================================
# FRAMEWORK SPECIFIC (FRAMEWORK ÖZEL DOSYALAR)
# =================================
# React
.sass-cache/

# Angular
.angular/cache/

# Vue
.vite/cache/

# =================================
# PROJECT SPECIFIC (PROJE ÖZEL DOSYALAR)
# =================================
# Anadolu Hastaneleri Kalite Yönetim Sistemi
# Database backups
database/backups/
database/dumps/
*.sql.backup

# Temporary uploads
temp/uploads/
temp/files/

# Generated reports
reports/generated/
reports/temp/

# User data
user-data/
user-uploads/
user-sessions/

# API keys and secrets (should be in .env)
api-keys/
secrets/
private-keys/

# =================================
# SECURITY (GÜVENLİK)
# =================================
# Never commit these files
*.p12
*.pfx
*.key
*.pem
*.crt
*.cer
id_rsa
id_rsa.pub
known_hosts

# =================================
# PERFORMANCE (PERFORMANS)
# =================================
# Performance monitoring
*.prof
*.heap

# =================================
# MISC (ÇEŞİTLİ)
# =================================
# Editor directories and files
.vscode/*
!.vscode/extensions.json
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json

# Local Netlify folder
.netlify

# Parcel
.cache
.parcel-cache

# Serverless directories
.serverless

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*
*.md
# =================================
# END OF FILE (DOSYA SONU)
# =================================
```
